app letmecook {
  wasp: {
    version: "^0.14.0"
  },
  title: "letmecook",
  head: [
    "<meta property='og:type' content='website' />",
    "<meta property='og:title' content='letmecook' />",
    "<meta property='og:url' content='https://letmecook.food' />",
    "<meta property='og:description' content='A clean and simple cookbook with 100% good recipes.' />",
    "<meta property='og:image' content='https://letmecook.food/icon.png' />",
    "<meta name='twitter:image' content='https://letmecook.food/icon.png' />",
    "<meta name='twitter:image:width' content='600' />",
    "<meta name='twitter:image:height' content='600' />",
    "<meta name='twitter:card' content='summary_large_image' />",
    "<script defer data-domain='letmecook.food' src='https://plausible.io/js/script.js'></script>",
  ],
  client: {
    rootComponent: import App from "@src/client/App",
    setupFn: import setupClient from "@src/client/setup.ts",
  },
  auth: {
    userEntity: User,
    methods: {
      discord: {
        configFn: import { discordAuthConfig } from "@src/server/auth/discord.js",
        userSignupFields: import { discordUserSignupFields } from "@src/server/auth/discord.js",
      }
    },
    onAuthFailedRedirectTo: "/login",
  }
}

// routes
route RootRoute { path: "/", to: LandingPage }
page LandingPage {
  component: import LandingPage  from "@src/client/app/LandingPage"
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import { LoginPage } from "@src/auth/LoginPage"
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import { SignupPage } from "@src/auth/SignupPage"
}

route RecipeRoute { path: "/recipes/:id", to: RecipePage }
page RecipePage {
  component: import RecipePage from "@src/components/Recipe/RecipePage"
}

route AllRecipesRoute { path: "/recipes", to: AllRecipesPage }
page AllRecipesPage {
  component: import AllRecipesPage from "@src/components/Recipe/AllRecipesPage"
}

route SubmitRecipeRoute { path: "/submit", to: SubmitRecipePage }
page SubmitRecipePage {
  authRequired: true,
  component: import SubmitRecipePage from "@src/components/Recipe/SubmitRecipePage"
}

route AdminRoute { path: "/admin", to: AdminPage }
page AdminPage {
  authRequired: true,
  component: import AdminPage from "@src/client/app/AdminPage"
}

route ProfileRoute { path: "/profile", to: ProfilePage }
page ProfilePage {
  authRequired: true,
  component: import ProfilePage from "@src/client/app/ProfilePage"
}

// queries
query getAllPublishedRecipes {
  fn: import { getAllPublishedRecipes } from "@src/server/queries.js",
  entities: [Recipe]
}

query getAllRecipes {
  fn: import { getAllRecipes } from "@src/server/queries.js",
  entities: [Recipe]
}

query getRecipe {
  fn: import { getRecipe } from "@src/server/queries.js",
  entities: [Recipe]
}

query getFeaturedRecipes {
  fn: import { getFeaturedRecipes } from "@src/server/queries.js",
  entities: [Recipe]
}

query getPendingRecipes {
  fn: import { getPendingRecipes } from "@src/server/queries.js",
  entities: [Recipe]
}

query getInReviewRecipes {
  fn: import { getInReviewRecipes } from "@src/server/queries.js",
  entities: [Recipe]
}

query getDeniedRecipes {
  fn: import { getDeniedRecipes } from "@src/server/queries.js",
  entities: [Recipe]
}

query getDownloadFileSignedURL {
  fn: import { getDownloadFileSignedURL } from "@src/file-upload/operations",
  entities: [User, File]
}

query getUserRecipes {
  fn: import { getUserRecipes } from "@src/server/queries.js",
  entities: [Recipe]
}

query getRecipeComments {
  fn: import { getRecipeComments } from "@src/server/queries.js",
  entities: [Recipe, RecipeComment]
}

// actions
action createFile {
  fn: import { createFile } from "@src/file-upload/operations",
  entities: [User, File]
}

action createRecipe {
  fn: import { createRecipe } from "@src/server/actions.js",
  entities: [User, Recipe, Tag, Ingredient, Step]
}

action setRecipePending {
  fn: import { setRecipePending } from "@src/server/actions.js",
  entities: [Recipe]
}

action setRecipeInReview {
  fn: import { setRecipeInReview } from "@src/server/actions.js",
  entities: [Recipe]
}

action setRecipeDenied {
  fn: import { setRecipeDenied } from "@src/server/actions.js",
  entities: [Recipe]
}

action setRecipePublished {
  fn: import { setRecipePublished } from "@src/server/actions.js",
  entities: [Recipe]
}

action createRecipeComment {
  fn: import { createRecipeComment } from "@src/server/actions.js",
  entities: [Recipe, RecipeComment]
}

action setUserSeenComment {
  fn: import { setUserSeenComment } from "@src/server/actions.js",
  entities: [User, RecipeComment]
}

action setRecipeFeatured {
  fn: import { setRecipeFeatured } from "@src/server/actions.js",
  entities: [Recipe]
}

action setRecipeUnfeatured {
  fn: import { setRecipeUnfeatured } from "@src/server/actions.js",
  entities: [Recipe]
}

action createVote {
  fn: import { createVote } from "@src/server/actions.js",
  entities: [User, Vote, Recipe]
}
